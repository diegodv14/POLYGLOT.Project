// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using POLYGLOT.Project.Invoice.application.Models;

#nullable disable

namespace POLYGLOT.Project.Invoice.application.Migrations
{
    [DbContext(typeof(DbInvoiceContext))]
    partial class DbInvoiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("invoices_idinvoice_seq");

            modelBuilder.Entity("POLYGLOT.Project.Invoice.application.Models.Invoice", b =>
                {
                    b.Property<int>("IdInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idInvoice")
                        .HasDefaultValueSql("nextval('invoices_idinvoice_seq'::regclass)");

                    b.Property<float?>("Amount")
                        .HasColumnType("real")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<float>("Paid")
                        .HasColumnType("real")
                        .HasColumnName("paid");

                    b.Property<int>("Secuencial")
                        .HasColumnType("integer")
                        .HasColumnName("secuencial");

                    b.Property<bool?>("State")
                        .HasColumnType("boolean")
                        .HasColumnName("state");

                    b.HasKey("IdInvoice")
                        .HasName("invoices_pkey");

                    b.ToTable("invoices", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
